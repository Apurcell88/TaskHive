// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  role           Role      @default(USER)
  
  // Projects the user owns
  ownedProjects  Project[] @relation("UserOwnedProjects")
  
  // Projects the user is a member of (many-to-many)
  projects       Project[] @relation("ProjectMembers")
  
  // Tasks assigned to the user (many-to-many)
  tasks          Task[]    @relation("TaskAssignees")
  
  createdAt      DateTime  @default(now())
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  
  // Owner relation
  owner       User      @relation("UserOwnedProjects", fields: [ownerId], references: [id])
  ownerId     String
  
  // Members relation (many-to-many)
  members     User[]    @relation("ProjectMembers")
  
  // Tasks in this project
  tasks       Task[]
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      TaskStatus  @default(TODO)
  dueDate     DateTime?
  
  // Project relation
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   String
  
  // Assignees (many-to-many)
  assignees   User[]      @relation("TaskAssignees")
  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
